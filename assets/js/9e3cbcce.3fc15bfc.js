"use strict";(self.webpackChunkrushstack_io=self.webpackChunkrushstack_io||[]).push([[68243],{50158:function(e,n,r){r.d(n,{Zo:function(){return u},kt:function(){return m}});var t=r(46393);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function i(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function o(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?i(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function p(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},i=Object.keys(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=t.createContext({}),l=function(e){var n=t.useContext(c),r=n;return e&&(r="function"==typeof e?e(n):o(o({},n),e)),r},u=function(e){var n=l(e.components);return t.createElement(c.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),d=l(r),m=a,b=d["".concat(c,".").concat(m)]||d[m]||s[m]||i;return r?t.createElement(b,o(o({ref:n},u),{},{components:r})):t.createElement(b,o({ref:n},u))}));function m(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=d;var p={};for(var c in n)hasOwnProperty.call(n,c)&&(p[c]=n[c]);p.originalType=e,p.mdxType="string"==typeof e?e:a,o[1]=p;for(var l=2;l<i;l++)o[l]=r[l];return t.createElement.apply(null,o)}return t.createElement.apply(null,r)}d.displayName="MDXCreateElement"},65724:function(e,n,r){r.r(n),r.d(n,{frontMatter:function(){return p},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return u},default:function(){return d}});var t=r(74834),a=r(28265),i=(r(46393),r(50158)),o=["components"],p={hide_title:!0,custom_edit_url:null,pagination_prev:null,pagination_next:null},c=void 0,l={unversionedId:"api/node-core-library.brand",id:"api/node-core-library.brand",isDocsHomePage:!1,title:"node-core-library.brand",description:"Home &gt; @rushstack/node-core-library &gt; Brand",source:"@site/docs/api/node-core-library.brand.md",sourceDirName:"api",slug:"/api/node-core-library.brand",permalink:"/rushstack.io/pages/api/node-core-library.brand",editUrl:null,tags:[],version:"current",frontMatter:{hide_title:!0,custom_edit_url:null,pagination_prev:null,pagination_next:null},sidebar:"apiSidebar"},u=[{value:"Brand type",id:"brand-type",children:[],level:2},{value:"Remarks",id:"remarks",children:[],level:2}],s={toc:u};function d(e){var n=e.components,r=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,t.Z)({},s,r,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/rushstack.io/pages/api/index"},"Home")," ",">"," ",(0,i.kt)("a",{parentName:"p",href:"/rushstack.io/pages/api/node-core-library"},"@rushstack/node-core-library")," ",">"," ",(0,i.kt)("a",{parentName:"p",href:"/rushstack.io/pages/api/node-core-library.brand"},"Brand")),(0,i.kt)("h2",{id:"brand-type"},"Brand type"),(0,i.kt)("p",null,'A "branded type" is a primitive type with a compile-type key that makes it incompatible with other aliases for the primitive type.'),(0,i.kt)("b",null,"Signature:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"export declare type Brand<T, BrandTag extends string> = T & {\n    __brand: BrandTag;\n};\n")),(0,i.kt)("h2",{id:"remarks"},"Remarks"),(0,i.kt)("p",null,"Example usage:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"// PhoneNumber is a branded type based on the \"string\" primitive.\ntype PhoneNumber = Brand<string, 'PhoneNumber'>;\n\nfunction createPhoneNumber(input: string): PhoneNumber {\n  if (!/\\d+(\\-\\d+)+/.test(input)) {\n    throw new Error('Invalid phone number: ' + JSON.stringify(input));\n  }\n  return input as PhoneNumber;\n}\n\nconst p1: PhoneNumber = createPhoneNumber('123-456-7890');\n\n// PhoneNumber is a string and can be used as one:\nconst p2: string = p1;\n\n// But an arbitrary string cannot be implicitly type cast as PhoneNumber.\n// ERROR: Type 'string' is not assignable to type 'PhoneNumber'\nconst p3: PhoneNumber = '123-456-7890';\n")),(0,i.kt)("p",null,"For more information about this pattern, see ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Microsoft/TypeScript/blob/7b48a182c05ea4dea81bab73ecbbe9e013a79e99/src/compiler/types.ts#L693-L698"},"this comment")," explaining the TypeScript compiler's introduction of this pattern, and ",(0,i.kt)("a",{parentName:"p",href:"https://spin.atomicobject.com/2018/01/15/typescript-flexible-nominal-typing/"},"this article")," explaining the technique in depth."))}d.isMDXComponent=!0}}]);