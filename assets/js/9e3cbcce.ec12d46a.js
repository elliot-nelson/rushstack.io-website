"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[68243],{49613:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return d}});var r=t(59496);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=r.createContext({}),l=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=l(e.components);return r.createElement(c.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},b=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),b=l(t),d=a,m=b["".concat(c,".").concat(d)]||b[d]||s[d]||i;return t?r.createElement(m,o(o({ref:n},u),{},{components:t})):r.createElement(m,o({ref:n},u))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=b;var p={};for(var c in n)hasOwnProperty.call(n,c)&&(p[c]=n[c]);p.originalType=e,p.mdxType="string"==typeof e?e:a,o[1]=p;for(var l=2;l<i;l++)o[l]=t[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}b.displayName="MDXCreateElement"},60314:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return p},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return u},default:function(){return b}});var r=t(50098),a=t(46862),i=(t(59496),t(49613)),o=["components"],p={hide_title:!0,custom_edit_url:null,pagination_prev:null,pagination_next:null},c=void 0,l={unversionedId:"api/node-core-library.brand",id:"api/node-core-library.brand",isDocsHomePage:!1,title:"node-core-library.brand",description:"Home &gt; @rushstack/node-core-library &gt; Brand",source:"@site/docs/api/node-core-library.brand.md",sourceDirName:"api",slug:"/api/node-core-library.brand",permalink:"/rushstack.io-website/pages/api/node-core-library.brand",editUrl:null,tags:[],version:"current",frontMatter:{hide_title:!0,custom_edit_url:null,pagination_prev:null,pagination_next:null},sidebar:"apiSidebar"},u=[{value:"Brand type",id:"brand-type",children:[],level:2},{value:"Remarks",id:"remarks",children:[],level:2}],s={toc:u};function b(e){var n=e.components,t=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/rushstack.io-website/pages/api/index"},"Home")," ",">"," ",(0,i.kt)("a",{parentName:"p",href:"/rushstack.io-website/pages/api/node-core-library"},"@rushstack/node-core-library")," ",">"," ",(0,i.kt)("a",{parentName:"p",href:"/rushstack.io-website/pages/api/node-core-library.brand"},"Brand")),(0,i.kt)("h2",{id:"brand-type"},"Brand type"),(0,i.kt)("p",null,'A "branded type" is a primitive type with a compile-type key that makes it incompatible with other aliases for the primitive type.'),(0,i.kt)("b",null,"Signature:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"export declare type Brand<T, BrandTag extends string> = T & {\n    __brand: BrandTag;\n};\n")),(0,i.kt)("h2",{id:"remarks"},"Remarks"),(0,i.kt)("p",null,"Example usage:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"// PhoneNumber is a branded type based on the \"string\" primitive.\ntype PhoneNumber = Brand<string, 'PhoneNumber'>;\n\nfunction createPhoneNumber(input: string): PhoneNumber {\n  if (!/\\d+(\\-\\d+)+/.test(input)) {\n    throw new Error('Invalid phone number: ' + JSON.stringify(input));\n  }\n  return input as PhoneNumber;\n}\n\nconst p1: PhoneNumber = createPhoneNumber('123-456-7890');\n\n// PhoneNumber is a string and can be used as one:\nconst p2: string = p1;\n\n// But an arbitrary string cannot be implicitly type cast as PhoneNumber.\n// ERROR: Type 'string' is not assignable to type 'PhoneNumber'\nconst p3: PhoneNumber = '123-456-7890';\n")),(0,i.kt)("p",null,"For more information about this pattern, see ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Microsoft/TypeScript/blob/7b48a182c05ea4dea81bab73ecbbe9e013a79e99/src/compiler/types.ts#L693-L698"},"this comment")," explaining the TypeScript compiler's introduction of this pattern, and ",(0,i.kt)("a",{parentName:"p",href:"https://spin.atomicobject.com/2018/01/15/typescript-flexible-nominal-typing/"},"this article")," explaining the technique in depth."))}b.isMDXComponent=!0}}]);