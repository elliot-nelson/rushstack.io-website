"use strict";(self.webpackChunkrushstack_io=self.webpackChunkrushstack_io||[]).push([[53012],{50158:function(e,t,r){r.d(t,{Zo:function(){return l},kt:function(){return m}});var n=r(46393);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function p(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?p(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):p(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},p=Object.keys(e);for(n=0;n<p.length;n++)r=p[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(n=0;n<p.length;n++)r=p[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var u=n.createContext({}),c=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},l=function(e){var t=c(e.components);return n.createElement(u.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,p=e.originalType,u=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),f=c(r),m=a,d=f["".concat(u,".").concat(m)]||f[m]||s[m]||p;return r?n.createElement(d,i(i({ref:t},l),{},{components:r})):n.createElement(d,i({ref:t},l))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var p=r.length,i=new Array(p);i[0]=f;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var c=2;c<p;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},8817:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return o},contentTitle:function(){return u},metadata:function(){return c},toc:function(){return l},default:function(){return f}});var n=r(74834),a=r(28265),p=(r(46393),r(50158)),i=["components"],o={hide_title:!0,custom_edit_url:null,pagination_prev:null,pagination_next:null},u=void 0,c={unversionedId:"api/tree-pattern.itreepatterncaptureset",id:"api/tree-pattern.itreepatterncaptureset",isDocsHomePage:!1,title:"tree-pattern.itreepatterncaptureset",description:"Home &gt; @rushstack/tree-pattern &gt; ITreePatternCaptureSet",source:"@site/docs/api/tree-pattern.itreepatterncaptureset.md",sourceDirName:"api",slug:"/api/tree-pattern.itreepatterncaptureset",permalink:"/rushstack.io/pages/api/tree-pattern.itreepatterncaptureset",editUrl:null,tags:[],version:"current",frontMatter:{hide_title:!0,custom_edit_url:null,pagination_prev:null,pagination_next:null},sidebar:"apiSidebar"},l=[{value:"ITreePatternCaptureSet type",id:"itreepatterncaptureset-type",children:[],level:2},{value:"Remarks",id:"remarks",children:[],level:2}],s={toc:l};function f(e){var t=e.components,r=(0,a.Z)(e,i);return(0,p.kt)("wrapper",(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,p.kt)("p",null,(0,p.kt)("a",{parentName:"p",href:"/rushstack.io/pages/api/index"},"Home")," ",">"," ",(0,p.kt)("a",{parentName:"p",href:"/rushstack.io/pages/api/tree-pattern"},"@rushstack/tree-pattern")," ",">"," ",(0,p.kt)("a",{parentName:"p",href:"/rushstack.io/pages/api/tree-pattern.itreepatterncaptureset"},"ITreePatternCaptureSet")),(0,p.kt)("h2",{id:"itreepatterncaptureset-type"},"ITreePatternCaptureSet type"),(0,p.kt)("p",null,"Provides additional detail about the success or failure of ",(0,p.kt)("a",{parentName:"p",href:"/rushstack.io/pages/api/tree-pattern.treepattern.match"},"TreePattern.match()")," ."),(0,p.kt)("b",null,"Signature:"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-typescript"},"export declare type ITreePatternCaptureSet = {\n    [tagName: string]: TreeNode;\n} | {\n    failPath: string;\n};\n")),(0,p.kt)("b",null,"References:")," [TreeNode](/rushstack.io/pages/api/tree-pattern.treenode)",(0,p.kt)("h2",{id:"remarks"},"Remarks"),(0,p.kt)("p",null,"On success, the object will contain keys for any successfully matched tags, as defined using ",(0,p.kt)("a",{parentName:"p",href:"/rushstack.io/pages/api/tree-pattern.treepattern.tag"},"TreePattern.tag()")," ."),(0,p.kt)("p",null,"On failure, the ",(0,p.kt)("inlineCode",{parentName:"p"},"failPath")," member will indicate the JSON path of the node that failed to match."))}f.isMDXComponent=!0}}]);